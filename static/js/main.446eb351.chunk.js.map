{"version":3,"sources":["resources/whale.png","components/Movie.jsx","Home.jsx","components/DropdownMenu.jsx","components/Pagination.jsx","Films.jsx","components/SeriesDropdownMenu.jsx","components/TvSeries.jsx","Series.jsx","Nav.jsx","SearchResult.jsx","NowPlayingMovies.jsx","App.jsx","index.jsx"],"names":["module","exports","Movie","vote","id","title","poster_path","overview","vote_average","IMG_API","INFO_API","CREDITS_API","useState","modalIsOpen","setModalIsOpen","genres","release_date","movieGenres","setMovieGenres","cast","crew","movieCredits","setMovieCredits","PopUpBox","className","isOpen","onRequestClose","onClick","src","alt","slice","length","map","genre","name","join","filter","job","dir","writer","useEffect","fetch","then","res","json","data","Home","props","movies","setMovies","topTen","setTopTen","nowPlaying","setNowPlaying","results","isSearch","to","movie","key","searchResult","DropdownMenu","setGenre","onChange","e","target","value","Pagination","showPagination","newPage","handlePage","Films","films","setFilms","currentPage","setCurrentPage","MOVIE_GENRE_API","setID","console","log","d","direction","SeriesDropdownMenu","tvGenres","setTvGenres","setGenreID","TvSeries","first_air_date","tvCredits","setTvCredits","Series","series","setSeries","genreID","SERIES_API","curr","Nav","history","useHistory","show","handleShow","searchKeyword","setSearchKeyword","window","addEventListener","scrollY","removeEventListener","style","backgroundColor","logo","type","placeholder","onKeyPress","push","queryKeyword","SearchResult","location","useLocation","setSearchResult","tvSearchResult","setTVSearchResult","state","NowPlayingMovies","nowPlayingMovies","setNowPlayingMovies","NOW_PLAYING_API","App","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.446eb351.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whale.fb81c293.png\";","import React, {useState, useEffect} from 'react'\nimport Modal from 'react-modal';\n\nconst setVoteClass = (vote) => {\n    if (vote >= 8) {\n        return \"green\";\n    } else if (vote >= 6) {\n        return \"orange\";\n    } else {\n        return \"red\";\n    }\n}\n\nfunction Movie({id, title, poster_path, overview, vote_average}) {\n    const IMG_API = \"https://image.tmdb.org/t/p/w500\";\n    const INFO_API = `https://api.themoviedb.org/3/movie/${id}?api_key=269942df022fac8e94e126c0e90c61ee&language=en-US`\n    const CREDITS_API = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=269942df022fac8e94e126c0e90c61ee&language=en-US`\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [movieGenres, setMovieGenres] = useState({\n        genres:'',\n        release_date:'',\n    }); \n    const [movieCredits, setMovieCredits] = useState({\n        cast:'',\n        crew:''\n    })\n\n    const getMovieGenres = () => {\n        fetch(INFO_API)\n        .then((res) => res.json())\n        .then((data) => {\n          setMovieGenres({\n              ...movieGenres,\n              ...data,\n          });\n        });\n      };\n\n    const getMovieCredits = () => {\n        fetch(CREDITS_API)\n        .then((res) => res.json())\n        .then((data) => {\n          setMovieCredits({\n            ...movieCredits,\n            ...data,\n          });\n        });\n      };\n\n    const PopUpBox = () => {\n        return (\n            <Modal className=\"movie-overview\"\n                    isOpen={true}\n                    onRequestClose={() => setModalIsOpen(false)}\n                >\n                    <div>\n                        <button className=\"close\" onClick={() => setModalIsOpen(false)}></button>\n                        <div className=\"movie-overview-container\">\n                            <div className=\"movie-poster-button\">\n                                <img className=\"overview-img\" src={IMG_API + poster_path} alt ={title}/>\n                                {movieGenres.release_date >= \"2020-01-01\" && movieGenres.release_date <= \"2020-12-31\" && (\n                                    <button className=\"book-button\">Book Ticket</button>)\n                                }\n                            </div>\n                            <div>\n                                <h2 className=\"overview-title\">{title}</h2>\n                                <div className=\"overview-header\">\n                                    <h3 className=\"overview-header-info\">{movieGenres.release_date.slice(0, 4)}</h3>\n                                    <div className=\"movie-rating-container\">\n                                        <img className=\"star-icon\" src=\"https://img.icons8.com/fluent/48/000000/star.png\"/>\n                                        <h3 className=\"overview-header-info\">{vote_average}</h3>\n                                    </div>\n                                    { movieGenres.genres.length > 0 &&\n                                        (<h3 className=\"overview-film-genre-info\"> {\n                                            movieGenres.genres.slice(0,3).map(genre => genre.name).join(\", \") }\n                                        </h3> )}\n                                    </div>\n                                <hr /> \n                                <h3 className=\"overview-overview\">{overview}</h3>\n\n                                <div className=\"movie-overview-info\">\n                                    <span className=\"overview-role\">Director</span>\n                                    <div className=\"movie-cast-container\">\n                                        { movieCredits.crew.length > 0 &&\n                                        (<h3 className=\"movie-cast\"> {\n                                            movieCredits.crew.filter((crew) => crew.job===\"Director\")\n                                            .map(dir => dir.name).join(\", \") }\n                                        </h3> )}\n                                    </div>\n                                </div>\n\n                                <div className=\"movie-overview-info\">\n                                    <span className=\"overview-role\">Cast</span>\n                                    <div className=\"movie-cast-container\">\n                                        { movieCredits.cast.length > 0 &&\n                                        (<h3 className=\"movie-cast\"> {\n                                            movieCredits.cast.slice(0,5).map(cast => cast.name).join(\", \") } \n                                        </h3> )}\n                                    </div>\n                                </div>\n\n                                <div className=\"movie-overview-info\">\n                                    <span className=\"overview-role\">Writer</span>\n                                    <div className=\"movie-cast-container\">   \n                                        { movieCredits.crew.length > 0 &&\n                                        (<h3 className=\"movie-cast\"> {\n                                            movieCredits.crew.filter((crew) => crew.job===\"Writer\")\n                                            .map(writer => writer.name).join(\", \") } \n                                        </h3> )}                                    \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n        )\n    }\n    \n    useEffect(() => {\n        getMovieCredits();\n        getMovieGenres();\n    }, [])\n\n\n    return (\n        <>\n        {modalIsOpen == true && (\n            <PopUpBox />\n        )}\n\n        <div className=\"movie\" onClick={() => setModalIsOpen(true)}>\n            <img src={IMG_API + poster_path} alt ={title}/>\n\n            <div className=\"movie-info\">\n                <h3>{title}</h3>\n\n                <span className={`tag ${setVoteClass(vote_average)}`}>\n                    {vote_average}\n                </span>\n\n            </div>\n\n        </div>\n        </>\n    )\n}\n\nexport default Movie;\n","import React, {useEffect, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport Movie from '../src/components/Movie';\n\n\nfunction Home(props) {\n    \n    const NOW_PLAYING_API = \"https://api.themoviedb.org/3/movie/now_playing?api_key=269942df022fac8e94e126c0e90c61ee\"\n    const TOP_TEN_API = \"https://api.themoviedb.org/3/movie/top_rated?api_key=269942df022fac8e94e126c0e90c61ee&sort_by=vote_average.desc&primary_release_date.gte=2020-01-01&primary_release_date.lte=2020-12-31\"\n    const FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?api_key=269942df022fac8e94e126c0e90c61ee&sort_by=popularity.desc\"\n    const [movies, setMovies] = useState([]);\n    const [topTen, setTopTen] = useState([]);\n    const [nowPlaying, setNowPlaying] = useState([]);\n\n    const getMovies = (API) => {\n        fetch(API)\n        .then((res) => res.json())\n        .then((data) => {\n          setMovies(data.results);\n        });\n      };\n  \n      const getTopTenMovies = () => {\n        fetch(TOP_TEN_API)\n        .then((res) => res.json())\n        .then((data) => {\n          setTopTen(data.results);\n        });\n      }\n  \n      const getNowPlayingMovies = () => {\n        fetch(NOW_PLAYING_API)\n        .then((res) => res.json())\n        .then((data) => {\n          setNowPlaying(data.results);\n        });\n      }\n  \n      useEffect(() => {\n          getTopTenMovies();\n          getMovies(FEATURED_API);\n          getNowPlayingMovies();\n        }, [])\n\n    return (\n        <>\n        {!props.isSearch && (\n            <div>\n                {/* Now Playing Movies */}\n                <Link to=\"/now-playing\">\n                    <button className=\"movie-header-button\">Now Playing</button>\n                </Link>\n                <div className=\"movie-container\">\n                    {nowPlaying.length > 0 && nowPlaying.map((movie) => (\n                        <Movie key={movie.id} {...movie}/>\n                    ))}\n                </div>\n\n                {/* Top 10 Picks */}\n                <h2 className=\"movie-header\">Top 10 Picks</h2>\n                <div className=\"movie-container\">\n                    {topTen.length > 0 && topTen.slice(0, 10).map((movie) => (\n                        <Movie key={movie.id} {...movie}/>\n                    ))}\n                </div>\n\n                {/* Featured Movie */}\n                <h2 className=\"movie-header\">Featured</h2>\n                <div className=\"movie-container\">\n                    {movies.length > 0 && movies.map((movie) => (\n                        <Movie key={movie.id} {...movie}/>\n                    ))}\n                </div>  \n            </div>\n        )}\n\n        {props.isSearch && (\n             <div className=\"movie-container\">\n                {props.searchResult.length > 0 && props.searchResult.map((movie) => (\n                    <Movie key={movie.id} {...movie}/>\n                ))}\n            </div>\n        )}\n        </>\n    )\n}\n\nexport default Home;\n","import React, {useState, useEffect} from 'react'\n\nconst MOVIE_GENRE_API = \"https://api.themoviedb.org/3/genre/movie/list?api_key=269942df022fac8e94e126c0e90c61ee&language=en-US\"\n\nfunction DropdownMenu({setGenre}) {\n    const [movieGenres, setMovieGenres] = useState([]); \n\n    const getMovieGenres = () => {\n        fetch(MOVIE_GENRE_API)\n        .then((res) => res.json())\n        .then((data) => {\n          setMovieGenres(data.genres);\n        });\n      };\n    \n    useEffect(() => {\n        getMovieGenres();\n    }, [])\n\n\n    return (\n        <select onChange={(e) => setGenre(e.target.value)}>\n            {movieGenres.length > 0 && movieGenres.map((genre) => (\n                <option key={genre.id} value={genre.id}>{genre.name}</option>\n            ))}\n        </select>\n     \n    );\n  };\n\nexport default DropdownMenu;","import React from 'react'\n\nfunction Pagination({showPagination, newPage}) {\n\n    const handlePage = (dir) => {\n        newPage(dir);\n    }\n\n    return (\n        <div>\n            {showPagination && (\n                <div className=\"page-container\">\n                    <button className=\"prev-next\" onClick={() => handlePage(\"previous\")}>Previous</button>\n                    <button className=\"prev-next\" onClick={() => handlePage(\"next\")}>Next</button>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Pagination;\n","import React, {useEffect, useState} from 'react';\nimport Movie from '../src/components/Movie'\nimport DropdownMenu from '../src/components/DropdownMenu';\nimport Pagination from '../src/components/Pagination';\n\n\nfunction Films() {\n    \n    const [films, setFilms] = useState([]);\n    const [genre, setGenre] = useState(28);\n    const [showPagination, setShowPagination] = useState(true);\n    const [currentPage, setCurrentPage] = useState(1);\n    const MOVIE_GENRE_API = `https://api.themoviedb.org/3/discover/movie?api_key=269942df022fac8e94e126c0e90c61ee&with_genres=${genre}&page=${currentPage}`\n    \n    \n    const setID = (id) => {\n        console.log(\"genre\", genre);\n        setGenre(id);\n    }\n    \n    const getAllFilms = () => {\n        fetch(MOVIE_GENRE_API)\n        .then((res) => res.json())\n        .then((data) => {\n          setFilms(data.results);\n        });\n    }\n\n    const newPage = (direction) => {\n        if (direction === \"next\") {\n            setCurrentPage(currentPage + 1);\n            console.log(\"current page\", currentPage);\n        } else if (direction === \"previous\" && currentPage != 1) {\n            setCurrentPage(currentPage - 1);\n        }\n    }\n\n    useEffect(() => {\n        getAllFilms();\n      }, [currentPage, genre])\n\n    return (\n        <div>\n            <DropdownMenu\n                setID={setID}\n                setGenre={setGenre}\n            />\n            {/* All Movies */}\n            <h1 className=\"movie-header\">Films</h1>\n            <div className=\"movie-container\">\n                {films.length > 0 && films.map((movie) => (\n                    <Movie key={movie.id} {...movie}/>\n                ))}\n            </div>\n            <Pagination \n                newPage={(d) => newPage(d)}\n                showPagination={showPagination}                \n            />\n        </div>\n    )\n}\n\nexport default Films;\n","import React, {useState, useEffect} from 'react'\n\n\n\nfunction SeriesDropdownMenu(props) {\n    const TV_GENRE_API = \"https://api.themoviedb.org/3/genre/tv/list?api_key=269942df022fac8e94e126c0e90c61ee&language=en-US\"\n    const [isActive, setIsActive] = useState(false);\n    const [tvGenres, setTvGenres] = useState([]); \n\n    const getTvGenres = () => {\n        fetch(TV_GENRE_API)\n        .then((res) => res.json())\n        .then((data) => {\n          setTvGenres(data.genres);\n        });\n      };\n    \n    useEffect(() => {\n        getTvGenres();\n        console.log(\"tv genres:\", tvGenres);\n    }, [])\n  \n    return (\n        <select onChange={(e) => props.setGenreID(e.target.value)}>\n            {tvGenres.length > 0 && tvGenres.map((genre) => (\n                <option key={genre.id} value={genre.id}>{genre.name}</option>\n            ))}\n        </select>\n        \n    );\n  };\n\nexport default SeriesDropdownMenu;","import React, {useState, useEffect} from 'react'\nimport Modal from 'react-modal';\n\n\nconst setVoteClass = (vote) => {\n    if (vote >= 8) {\n        return \"green\";\n    } else if (vote >= 6) {\n        return \"orange\";\n    } else {\n        return \"red\";\n    }\n}\n\nfunction TvSeries({id, name, poster_path, overview, vote_average}) {\n    const IMG_API = \"https://image.tmdb.org/t/p/w500\";\n    const INFO_API = `https://api.themoviedb.org/3/tv/${id}?api_key=269942df022fac8e94e126c0e90c61ee&language=en-US`\n    const CREDITS_API = `https://api.themoviedb.org/3/tv/${id}/credits?api_key=269942df022fac8e94e126c0e90c61ee&language=en-US`\n    const [isNowPlaying, setIsNowPlaying] = useState(false);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [tvGenres, setTvGenres] = useState({\n        genres:'',\n        first_air_date: ''\n    }); \n    const [tvCredits, setTvCredits] = useState({\n        cast:'',\n        crew:''\n    })\n\n    const getTvGenres = () => {\n        fetch(INFO_API)\n        .then((res) => res.json())\n        .then((data) => {\n          setTvGenres({\n              ...tvGenres,\n              ...data,\n          });\n        });\n      };\n\n    const getTvCredits = () => {\n        fetch(CREDITS_API)\n        .then((res) => res.json())\n        .then((data) => {\n          setTvCredits({\n            ...tvCredits,\n            ...data,\n          });\n        });\n      };\n\n      const PopUpBox = () => {\n        return (\n            <Modal className=\"movie-overview\"\n                    isOpen={true}\n                    onRequestClose={() => setModalIsOpen(false)}\n                >\n                    <div>\n                        <button className=\"close\" onClick={() => setModalIsOpen(false)}></button>\n                        <div className=\"movie-overview-container\">\n                        <div className=\"movie-poster-button\">\n                            <img className=\"overview-img\" src={IMG_API + poster_path} alt ={name}/>\n                        </div>\n                            <div>\n                                <h2 className=\"overview-title\">{name}</h2>\n                                <div className=\"overview-header\">\n                                    <h3 className=\"overview-header-info\">{tvGenres.first_air_date.slice(0, 4)}</h3>\n                                    <div className=\"movie-rating-container\">\n                                        <img className=\"star-icon\" src=\"https://img.icons8.com/fluent/48/000000/star.png\"/>\n                                        <h3 className=\"overview-header-info\">{vote_average}</h3>\n                                    </div>\n                                    <div className=\"movie-genre-container\">\n                                        { tvGenres.genres.length > 0 &&\n                                            (<h3 className=\"overview-film-genre-info\"> {\n                                                tvGenres.genres.slice(0,3).map(genre => genre.name).join(\", \") }\n                                            </h3> )}\n                                    </div>\n                                </div>\n                                <hr /> \n                                <h3 className=\"overview-overview\">{overview}</h3>\n\n                                <div className=\"movie-overview-info\">\n                                    <span className=\"overview-role\">Director</span>\n                                    <div className=\"movie-cast-container\">\n                                        { tvCredits.crew.length > 0 &&\n                                            (<h3 className=\"movie-cast\"> {\n                                                    tvCredits.crew.filter((crew) => crew.job===\"Director\")\n                                                .map(dir => dir.name).join(\", \") }\n                                            </h3> )}\n                                    </div>\n                                </div>\n\n                                <div className=\"movie-overview-info\">\n                                    <span className=\"overview-role\">Cast</span>\n                                    <div className=\"movie-cast-container\">\n                                        { tvCredits.cast.length > 0 &&\n                                            (<h3 className=\"movie-cast\"> {\n                                                tvCredits.cast.slice(0,5).map(cast => cast.name).join(\", \") } \n                                            </h3> )}\n                                    </div>\n                                </div>\n\n                                <div className=\"movie-overview-info\">\n                                    <span className=\"overview-role\">Writer</span>\n                                    <div className=\"movie-cast-container\">\n                                        { tvCredits.crew.length > 0 &&\n                                            (<h3 className=\"movie-cast\"> {\n                                                tvCredits.crew.filter((crew) => crew.job===\"Writer\")\n                                                .map(writer => writer.name).join(\", \") } \n                                            </h3> )}  \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n        )\n    }\n    \n    useEffect(() => {\n        getTvCredits();\n        getTvGenres();\n    }, [])\n\n\n    return (\n        <>\n        {modalIsOpen == true && (\n            <PopUpBox />\n        )}\n\n        <div className=\"movie\" onClick={() => setModalIsOpen(true)}>\n            <img src={IMG_API + poster_path} alt ={name}/>\n\n            <div className=\"movie-info\">\n                <h3>{name}</h3>\n\n                <span className={`tag ${setVoteClass(vote_average)}`}>\n                    {vote_average}\n                </span>\n\n            </div>\n\n        </div>\n        </>\n    )\n}\n\nexport default TvSeries;\n","import React, {useEffect, useState} from 'react';\nimport Movie from '../src/components/Movie'\nimport SeriesDropdownMenu from '../src/components/SeriesDropdownMenu'\nimport Pagination from '../src/components/Pagination';\nimport TvSeries from '../src/components/TvSeries';\n\n\nfunction Series() {\n    \n    const [series, setSeries] = useState([]);\n    const [showPagination, setShowPagination] = useState(true);\n    const [genreID, setGenreID] = useState(28);\n    const [currentPage, setCurrentPage] = useState(1);\n    const SERIES_API = `https://api.themoviedb.org/3/discover/tv?api_key=269942df022fac8e94e126c0e90c61ee&with_genres=${genreID}&page=${currentPage}`;\n\n    const getAllSeries = () => {\n        fetch(SERIES_API)\n        .then((res) => res.json())\n        .then((data) => {\n          setSeries(data.results);\n        });\n    }\n\n    const newPage = (direction) => {\n        if (direction === \"next\") {\n            setCurrentPage(curr => curr + 1);\n        } else if (direction === \"previous\" && currentPage != 1) {\n            setCurrentPage(curr => curr - 1);\n        }\n    }\n\n    useEffect(() => {\n        getAllSeries();\n      }, [currentPage, genreID])\n\n    return (\n        <div>\n            <SeriesDropdownMenu \n                setGenreID={setGenreID}\n            />\n            {/* All Movies */}\n            <h1 className=\"movie-header\">Series</h1>\n                <div className=\"movie-container\">\n                    {series.length > 0 && series.map((series) => (\n                        <TvSeries key={series.id} {...series}/>\n                    ))}\n                </div>\n                <Pagination \n                    newPage={(d) => newPage(d)}\n                    showPagination={showPagination}                \n                />\n\n        </div>\n    )\n}\n\nexport default Series;\n","import React, {useState, useEffect} from 'react'\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from '../src/resources/whale.png';\nfunction Nav() {\n  const history = useHistory();\n  const [show, handleShow] = useState(false);\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\n\n  useEffect(() => {\n      window.addEventListener('scroll', () => {\n        if (window.scrollY > 5) {\n          handleShow(true);\n        } else {\n          handleShow(false);\n        }\n      });\n  \n      return () => {\n        window.removeEventListener('scroll', useEffect);\n      };\n    }, []);\n  \n\n  return (\n      <header style={{\n        backgroundColor: show ? 'transparent': '#22254b',\n      }}>\n\n      <div className=\"menu-category-container\">\n        <Link to='/' >\n          <img className=\"logo\" src={logo}></img>\n        </Link>\n\n        <div className=\"menu-category\">\n          <Link to='/' >\n              <button className=\"menu-choice\">\n                  Home\n              </button>\n          </Link>\n\n          <Link to={'/films'} className=\"menu-choice\">\n              <button className=\"menu-choice\">\n                  Films\n              </button>            \n          </Link>\n\n          <Link to={'/series'} className=\"menu-choice\">\n              <button className=\"menu-choice\">\n                  Series\n              </button>            \n          </Link>\n        </div>\n\n        </div>\n          \n        {/* Search */}\n        <input className=\"search\"\n          type=\"search\" \n          placeholder=\"Search...\"\n          value={searchKeyword}\n          onChange={(e) => setSearchKeyword(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              history.push(\"/search\", {\n                queryKeyword: searchKeyword\n              });\n            }\n          }}\n        />\n      </header>\n  );\n}\n\nexport default Nav;\n","import React, {useEffect, useState} from 'react';\nimport Movie from './components/Movie'\nimport Pagination from './components/Pagination';\nimport { useLocation } from \"react-router-dom\";\nimport TvSeries from './components/TvSeries';\n\nfunction SearchResult(props) {\n    const location = useLocation();\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchResult, setSearchResult] = useState([]);\n    const [tvSearchResult, setTVSearchResult] = useState([]);\n    const [showPagination, setShowPagination] = useState(true);\n    const searchKeyword = location.state.queryKeyword;\n\n    const newPage = (direction) => {\n        if (direction === \"next\") {\n            setCurrentPage(currentPage + 1);\n            console.log(\"current page\", currentPage);\n        } else if (direction === \"previous\" && currentPage != 1) {\n            setCurrentPage(currentPage - 1);\n        }\n    }\n\n    const getSearchResult = () => {\n        fetch(`https://api.themoviedb.org/3/search/movie?api_key=269942df022fac8e94e126c0e90c61ee&query=${searchKeyword}&page=${currentPage}`)\n        .then((res) => res.json())\n        .then((data) => {\n            setSearchResult(data.results || []);\n        })\n    }\n\n    const getTVSearchResult = () => {\n        fetch(`https://api.themoviedb.org/3/search/tv?api_key=269942df022fac8e94e126c0e90c61ee&query=${searchKeyword}&page=${currentPage}`)\n        .then((res) => res.json())\n        .then((data) => {\n            setTVSearchResult(data.results || []);\n        })\n    }\n\n\n    useEffect(() => {\n        getSearchResult();\n        getTVSearchResult();\n    }, [searchKeyword, currentPage]);\n\n    return (\n    \n        <div>\n            {searchResult.length > 0 ? (\n                <>\n                    <h1 className=\"movie-header\">Showing {searchResult.length + tvSearchResult.length} result(s)</h1>\n                    <div className=\"movie-container\">\n                        {searchResult.map((movie) => (\n                            <Movie key={movie.id} {...movie}/>\n                        ))}\n                        {tvSearchResult.map((series) => (\n                            <TvSeries key={series.id} {...series}/>\n                        ))}\n                        \n                    </div>\n                    <Pagination \n                        newPage={(d) => newPage(d)}\n                        showPagination={showPagination}                \n                    />\n                </>\n            ) :\n            \n                <div>\n                    <h3 className=\"movie-header\">Oops, no results found.</h3>\n                </div>\n\n            }\n        </div>\n    )\n}\n\nexport default SearchResult;\n","import React, {useEffect, useState} from 'react';\nimport Movie from './components/Movie'\nimport DropdownMenu from './components/DropdownMenu'\nimport Pagination from './components/Pagination';\n\n\nfunction NowPlayingMovies() {\n    \n    const [nowPlayingMovies, setNowPlayingMovies] = useState([]);\n    const [genre, setGenre] = useState(28);\n    const [showPagination, setShowPagination] = useState(true);\n    const [currentPage, setCurrentPage] = useState(1);\n    const NOW_PLAYING_API = `https://api.themoviedb.org/3/movie/now_playing?api_key=269942df022fac8e94e126c0e90c61ee&with_genres=${genre}&page=${currentPage}`;\n    \n    \n    const setID = (id) => {\n        setGenre(id);\n    }\n    \n    const getAllNowPlayingMovies = () => {\n        fetch(NOW_PLAYING_API)\n        .then((res) => res.json())\n        .then((data) => {\n          setNowPlayingMovies(data.results);\n        });\n    }\n\n    const newPage = (direction) => {\n        if (direction === \"next\") {\n            setCurrentPage(currentPage + 1);\n            console.log(\"current page\", currentPage);\n        } else if (direction === \"previous\" && currentPage != 1) {\n            setCurrentPage(currentPage - 1);\n        }\n    }\n\n    useEffect(() => {\n        getAllNowPlayingMovies();\n      }, [currentPage, genre])\n\n    return (\n        <div>\n            <DropdownMenu\n                setID={setID}\n                setGenre={setGenre}\n            />\n            {/* All Movies */}\n            <h1 className=\"movie-header\">Now Playing</h1>\n            <div className=\"movie-container\">\n                {nowPlayingMovies.length > 0 && nowPlayingMovies.map((movie) => (\n                    <Movie key={movie.id} {...movie}/>\n                ))}\n            </div>\n            <Pagination \n                newPage={(d) => newPage(d)}\n                showPagination={showPagination}                \n            />\n        </div>\n    )\n}\n\nexport default NowPlayingMovies;\n","import React, {useEffect, useState} from 'react'\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\nimport Home from './Home';\nimport Films from './Films';\nimport Series from './Series';\nimport Nav from './Nav'\nimport SearchResult from './SearchResult';\nimport NowPlayingMovies from './NowPlayingMovies';\n\n\nfunction App() {\n    return (\n        <Router basename=\"/movieapp\">\n          <Nav />\n\n          <Route exact path=\"/films\">\n            <Films />\n          </Route>\n\n          <Route exact path=\"/series\">\n            <Series />\n          </Route>   \n\n          <Route exact path=\"/search\">\n            <SearchResult />\n          </Route> \n\n          <Route exact path=\"/now-playing\">\n            <NowPlayingMovies />\n          </Route>\n\n          <Route exact path=\"/\">\n            <Home />\n          </Route>         \n        \n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}